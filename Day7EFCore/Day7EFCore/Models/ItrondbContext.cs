// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Day7EFCore.Models
{
    public partial class ItrondbContext : DbContext
    {
        public ItrondbContext()
        {
        }

        public ItrondbContext(DbContextOptions<ItrondbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Customers> Customers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=BAN-B715VQ3;Initial Catalog=Itrondb;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Customers>(entity =>
            {
                entity.HasKey(e => e.Cuid)
                    .HasName("PK__customer__2CDD98A6BDE606DB");

                entity.ToTable("customers");

                entity.Property(e => e.Cuid)
                    .ValueGeneratedNever()
                    .HasColumnName("cuid");

                entity.Property(e => e.Age).HasColumnName("age");

                entity.Property(e => e.Caddress)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("caddress");

                entity.Property(e => e.Custname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("custname");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}